// --------------------------------------------------
// Flexbox SASS mixins
// The spec: http://www.w3.org/TR/css3-flexbox
// --------------------------------------------------

// Flexbox display
// flex or inline-flex
@mixin flex-display($display: flex) {
	display: -webkit-#{$display};
  display: -moz-#{$display};
	display: -ms-#{$display}box; // IE10 uses -ms-flexbox
	display: -ms-#{$display}; // IE11
	display: $display;
}

// The 'flex' shorthand
// - applies to: flex items
// <positive-number>, initial, auto, or none
@mixin flex($columns: initial) {
  -webkit-flex: $columns;
     -moz-flex: $columns;
      -ms-flex: $columns;
          flex: $columns;
}

// Flex Flow Direction
// - applies to: flex containers
// row | row-reverse | column | column-reverse
@mixin flex-direction($direction: row) {
  -webkit-flex-direction: $direction;
     -moz-flex-direction: $direction;
      -ms-flex-direction: $direction;
          flex-direction: $direction;
}

// Flex Line Wrapping
// - applies to: flex containers
// nowrap | wrap | wrap-reverse
@mixin flex-wrap($wrap: nowrap) {
  -webkit-flex-wrap: $wrap;
     -moz-flex-wrap: $wrap;
      -ms-flex-wrap: $wrap;
          flex-wrap: $wrap;
}

// Flex Direction and Wrap
// - applies to: flex containers
// <flex-direction> || <flex-wrap>
@mixin flex-flow($flow) {
  -webkit-flex-flow: $flow;
     -moz-flex-flow: $flow;
      -ms-flex-flow: $flow;
          flex-flow: $flow;
}

// Display Order
// - applies to: flex items
// <integer>
@mixin flex-order($order: 0) {
  -webkit-order: $order;
     -moz-order: $order;
      -ms-order: $order;
          order: $order;
}

// Flex grow factor
// - applies to: flex items
// <number>
@mixin flex-grow($grow: 0) {
  -webkit-flex-grow: $grow;
     -moz-flex-grow: $grow;
      -ms-flex-grow: $grow;
          flex-grow: $grow;
}

// Flex shrink
// - applies to: flex item shrink factor
// <number>
@mixin flex-shrink($shrink: 1) {
  -webkit-flex-shrink: $shrink;
     -moz-flex-shrink: $shrink;
      -ms-flex-shrink: $shrink;
          flex-shrink: $shrink;
}

// Flex basis
// - the initial main size of the flex item
// - applies to: flex itemsnitial main size of the flex item
// <width>
@mixin flex-basis($width: auto) {
  -webkit-flex-basis: $width;
     -moz-flex-basis: $width;
      -ms-flex-basis: $width;
          flex-basis: $width;
}

// Axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | space-between | space-around
@mixin justify-content($justify: flex-start) {
  -webkit-justify-content: $justify;
     -moz-justify-content: $justify;
      -ms-justify-content: $justify;
          justify-content: $justify;
}

// Packing Flex Lines
// - applies to: multi-line flex containers
// flex-start | flex-end | center | space-between | space-around | stretch
@mixin align-content($align: stretch) {
  -webkit-align-content: $align;
     -moz-align-content: $align;
      -ms-align-content: $align;
          align-content: $align;
}

// Cross-axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | baseline | stretch
@mixin align-items($align: stretch) {
  -webkit-align-items: $align;
     -moz-align-items: $align;
      -ms-align-items: $align;
          align-items: $align;
}

// Cross-axis Alignment
// - applies to: flex items
// auto | flex-start | flex-end | center | baseline | stretch
@mixin align-self($align: auto) {
  -webkit-align-self: $align;
     -moz-align-self: $align;
      -ms-align-self: $align;
          align-self: $align;
}


//
// Layout

.ish-layout {
  @include flex-display();
}

// Direction
.ish-layout-direction-row {
  @include flex-direction(row);
}
.ish-layout-direction-row-reverse {
  @include flex-direction(row-reverse);
}
.ish-layout-direction-column {
  @include flex-direction(column);
}
.ish-layout-direction-column-reverse {
  @include flex-direction(column-reverse);
}

// Wrap
.ish-layout-wrap-wrap {
  @include flex-wrap(wrap);
}
.ish-layout-wrap-nowrap {
  @include flex-wrap(nowrap);
}
.ish-layout-wrap-wrap-reserve {
  @include flex-wrap(wrap-reserve);
}


// Justify Content
.ish-layout-justify-content-flex-start {
  @include justify-content(flex-start);
}
.ish-layout-justify-content-flex-end {
  @include justify-content(flex-end);
}
.ish-layout-justify-content-center {
  @include justify-content(center);
}
.ish-layout-justify-content-space-between {
  @include justify-content(space-between);
}
.ish-layout-justify-content-space-around {
  @include justify-content(space-around);
}


// Align Items
.ish-layout-align-items-flex-start {
  @include align-items(flex-start);
}
.ish-layout-align-items-flex-end {
  @include align-items(flex-end);
}
.ish-layout-align-items-center {
  @include align-items(center);
}
.ish-layout-align-items-stretch {
  @include align-items(stretch);
}
.ish-layout-align-items-baseline {
  @include align-items(baseline);
}


// Align Content
.ish-layout-align-content-flex-start {
  @include align-content(flex-start);
}
.ish-layout-align-content-flex-end {
  @include align-content(flex-end);
}
.ish-layout-align-content-center {
  @include align-content(center);
}
.ish-layout-align-content-stretch {
  @include align-content(stretch);
}
.ish-layout-align-content-baseline {
  @include align-content(baseline);
}


// Align Self
.ish-layout-align-self-auto {
  @include align-self(auto);
}
.ish-layout-align-self-flex-start {
  @include align-self(flex-start);
}
.ish-layout-align-self-flex-end {
  @include align-self(flex-end);
}
.ish-layout-align-self-center {
  @include align-self(center);
}
.ish-layout-align-self-baseline {
  @include align-self(baseline);
}
.ish-layout-align-self-stretch {
  @include align-self(stretch);
}


//
// Debugging
.ish-layout-debug {

	$debug-space: .2em;
	$debug-opacity: .8;
	$debug-border: 1px dashed black;

	margin: $debug-space;
	border: $debug-border;
	@include opacity($debug-opacity);

	> * {
		margin: $debug-space;
		border: $debug-border;
		@include opacity($debug-opacity);
	}

  .ish-layout {
		margin: $debug-space;
		border: $debug-border;
		@include opacity($debug-opacity);

		> * {
			margin: $debug-space;
			@include opacity($debug-opacity);
		}

  }

}
